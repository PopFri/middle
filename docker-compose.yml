services:
  matomo:
    image: matomo:latest
    ports:
      - "8080:80"
    volumes:
      - matomo_data:/var/www/html
      - container_js:/var/www/html/js

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - container_js:/usr/share/nginx/html/js
      - ./logs:/var/log/nginx
    depends_on:
      - matomo
      - fluentd
      
  fluentd:
    build: ./fluentd
    ports:
      - "9880:9880"
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
      - ./logs:/var/log/nginx:ro
    depends_on:
      - kafka

  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://14.63.178.153:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

      KAFKA_MESSAGE_MAX_BYTES: 300000000
      KAFKA_REPLICA_FETCH_MAX_BYTES: 300000000
      KAFKA_MAX_REQUEST_SIZE: 300000000
      KAFKA_DELETE_TOPIC_ENABLE: "true"
    depends_on:
      - zookeeper

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - "8090:8080"
    depends_on:
      - kafka
    environment:
      - KAFKA_CLUSTERS_0_NAME=local-kafka
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - KAFKA_CLUSTERS_0_ZOOKEEPER=zookeeper:2181
volumes:
  matomo_data:
  container_js:  # container.js 공유용